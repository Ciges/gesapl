#!/usr/bin/env perl
use strict;
use warnings;
use lib '/usr/local/lib';

# load some modules
use Data::Dumper;
use Getopt::Long qw(GetOptions);
use Pod::Usage qw(pod2usage);
use IO::String;
use Pod::Select;

# GesApl mmodules
use GesApl::App;
use GesApl::Service;


# FUNCTIONS

# Print in standard output the following POD sections: SINOPSIS and USO and exits
# Optional parameters: message, exit value, show_info
# - If a message is passed as parameter, the message will be shown after GesApl description and only USO section will be shown
# - As second parameter an exit value could be given
# - If the third parameter is 0 then no info will be shown
sub help() {
    my $message = shift;
    my $exit_value = shift || 0;
    my $show_info = shift;
    $show_info = 1 if (not defined $show_info);

    my ($buffer, $io, $parser);
    if ($show_info == 1)  {
        $io     = IO::String->new($buffer);
        $parser = Pod::Select->new();
    }

    printf( "\n%s\n", GesApl::App->get_cfg( 'general', 'gesapl_description' ) );
    if ($message) {
        printf( "\n%s\n", $message);
        $parser->select("USO") if ($show_info == 1);
    }
    else {
        $parser->select("SINOPSIS|USO") if ($show_info == 1);
    }
    printf ("\n");

    if ($show_info == 1)  {
        $parser->parse_from_file( __FILE__, $io );
        $buffer =~ s/=head1\s*//g;

        print $buffer;
    }


    exit $exit_value;
}

# Alias for previous help() function with two paremeters message and exit_value
# The message received will have the preffix ERROR: and no usage info will be shown
sub error_message  {
    my $message = shift;
    my $exit_value = shift;
    &help("ERROR: ".$message, $exit_value, 0);
}

# MAIN CODE

# Constant and default values
use constant DESCRIPTION => GesApl::App->get_cfg( 'general', 'gesapl_description' );

# Start!
my $gesapl = GesApl::App->new();


# Parse script options
my ($help, $ms, @rs, $bs, $ls);

GetOptions( 
        'ayuda|a|help|man|?' => \$help,
        'monitorizar_servicios|ms' => \$ms,
        'registrar_servicio|rs=s@{1,4}' => \@rs,
        'borrar_servicio|bs=s' => \$bs,
        'listar_servicios|ls' => \$ls,
    )
    or pod2usage( -exitval => 2, -verbose => 2 );

help() if $help or (not $ms and not @rs and not $bs and not $ls);

# Command: --listar_servicios | -ls
if ($ls) {
    # Only one command is allowed
    &help("ERROR: Parámetros incorrectos, se ha indicado más de un comando", 2) if ($ms or @rs or $bs);

    printf( "\n%s\n", DESCRIPTION );    

    # Get a list of GesApl::Service instances, one for each service registered
    my $services = $gesapl->list_services();
    if ( scalar @{$services} > 0 ) {
        printf ("\nServicios monitorizados: ");
        foreach (@{$services}) {
            printf("%s ", $_->get_name()) if ($_->get_active() eq 1)
        }
        printf ("\n\n");

        printf ("Configuración de los servicios:\n");
        foreach (@{$services}) {
            printf ("\t- %s\n", $_->get_config());
        }
    }
    else {
        printf ("\nNo hay servicios registrado en gesapl\n");
    }
}
elsif ($bs)  {
    # Only one command is allowed
    &help("ERROR: Parámetros incorrectos, se ha indicado más de un comando", 2) if ($ls or $ms or @rs);

    if (not $gesapl->is_service_registered($bs))  {
        &error_message("el servicio $bs no está registrado", 3);
    }
    else {
        if (not $gesapl->unregister_service($bs))  {
            &error_message("el servicio $bs no se ha podido eliminar del registro", 3);
        }
    }

}
# Command: --registrar_servicios | -rs
elsif (@rs) {
    # Only one command is allowed
    &help("ERROR: Parámetros incorrectos, se ha indicado más de un comando", 2) if ($ls or $ms or $bs);



}


__END__

# HELP

=encoding utf8

=head1 NOMBRE

GesApl v2.00 - Aplicación de monitorización de servicios

=head1 SINOPSIS

gesapl2 orden parámetros

Siendo orden una de las siguientes: --monitorizar_servicios (o -ms), --registrar_servicio (o -rs), --borrar_servicio (o -bs), --listar_servicios (o -ls), --ayuda (o -a)

Ejemplos: 

Monitorizar Apache y MySQL

    gesapl --registrar_servicio apache apache2 /var/run/apache2/apache2.pid /usr/sbin/apache2
    gesapl --registrar_servicio mysql mysql /run/mysqld/mysqld.pid /usr/sbin/mysqld

Dejar de monitorizar MySQL

    gesapl --borrar_servicio mysql

=head1 USO

gesapl2 orden parámetros

    -ms | --monitorizar_servicios :  Monitoriza los servicios configurados

    -rs | --registrar_servicio nombre script_de_arranque ruta_pid_file service_executable :  Registra un servicio e inicia su monitorización

        El nombre de servicio es arbitrario, es el nombre con el que gesapl lo va a tratar
        El script de arranque es el nombre del script de arranque/parada en /etc/init.d
        El último parámetro es la ruta del binario con el que se le ve en la lista de procesos del sistema

        Si el servicio ya ha sido configurado y no se desea cambiarla sólo se necesita el nombre

    -bs | --borrar_servicio nombre :  Borra el servicio indicado

    -ls | --listar_servicios :  Lista los servicios monitorizados y los parámetros registrados para cada uno

    -a | --ayuda :  Muestra este mensaje explicativo


=cut
