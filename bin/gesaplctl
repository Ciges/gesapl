#!/bin/bash

# Script de control de servicios monitorizados por GesApl
# Permite arrancar, detener y reinicar los servicios configurados en GesApl

# CONFIGURACIÓN
CONFIG_FILE="/etc/gesapl/gesapl.conf"
GESAPLCTL_VERSION="1.00"

# FUNCIONES
function help {
    printf "%s\n"  "GesApl Control v${GESAPLCTL_VERSION} - Control de servicios monitorizados por GesApl"

    printf "\nUso: gesaplctl orden parámetros

Siendo orden una de las siguientes: --arrancar_servicio (o -as), --detener_servicio (o -ds), --reiniciar_servicio (o -rs), --listar-servicios (o -ls), --ayuda (o -a)

    -as | --arrancar_servicio nombre :  arranca el servicio configurado con ese nombre

    -ds | --detener_servicio nombre :  detieene el servicio configurado con ese nombre

    -rs | --reiniciar_servicio nombre :  reinicia el servicio configurado con ese nombre

    -ls | --listar_servicios :  Lista los servicios configurados y los parámetros registrados para cada uno

    -a | --ayuda :  Muestra este mensaje explicativo

Este script se debe de ejecutar con derechos de 'root'

"
}

# INICIO DEL CODIGO
if ! [[ -r ${CONFIG_FILE} ]];  then
    printf "ERROR: %s!\n\n" "Fichero de configuración ${CONFIG_FILE} no encontrado o imposible de leer"
    help
    exit 1
fi;

source ${CONFIG_FILE}


# Parseamos los argumentos
if [[ $# -eq 0 ]]; then
    # Registramos el comando
    log_command "gesaplctl $@"

    printf "ERROR %s\n\n" "Número de parámetros incorrecto"
    help
    exit 1
fi;

case $1 in
    -as|--arrancar_servicio)
        # Registramos el comando
        log_command "gesaplctl $@"

        if [[ `id -u` -ne 0 ]]; then
            printf "ERROR: Este script debe de ser ejecutado con derechos de root\n"
            exit 1
        fi;

        comando="as"
        shift
        nombre=$1
        shift

        if [[ -z ${nombre} ]]; then
            printf "ERROR %s\n\n" "Número de parámetros incorrecto"
            help
            exit 1
        fi
        ;;
    -ds|--detener_servicio)
        # Registramos el comando
        log_command "gesaplctl $@"

        if [[ `id -u` -ne 0 ]]; then
            printf "ERROR: Este script debe de ser ejecutado con derechos de root\n"
            exit 1
        fi;

        comando="ds"
        shift
        nombre=$1
        shift

        if [[ -z ${nombre} ]]; then
            printf "ERROR %s\n\n" "Número de parámetros incorrecto"
            help
            exit 1
        fi
        ;;
    -rs|--reiniciar_servicio)
        # Registramos el comando
        log_command "gesaplctl $@"

        if [[ `id -u` -ne 0 ]]; then
            printf "ERROR: Este script debe de ser ejecutado con derechos de root\n"
            exit 1
        fi;

        comando="rs"
        shift
        nombre=$1
        shift

        if [[ -z ${nombre} ]]; then
            printf "ERROR %s\n\n" "Número de parámetros incorrecto"
            help
            exit 1
        fi
        ;;
    -ls|--listar_servicios)
        # Registramos el comando
        log_command "gesaplctl $@"

        comando="ls"
        shift
        ;;
    -a|--ayuda)
        # Registramos el comando
        log_command "gesaplctl $@"

        help
        exit 0
        ;;
    *)
        # Registramos el comando
        log_command "gesaplctl $@ (Orden no reconocida)"

        printf "ERROR %s\n\n" "Orden no reconocida"
        help
        exit 1
        ;;
esac;

case ${comando} in
	"ls")
		$(echo ${monitor_services}|awk '{ print $1 }') -ls
		;;

	"as")
	    printf "%s\n\n"  "GesApl Control v${GESAPLCTL_VERSION} - Control de servicios monitorizados por GesApl"

        service_info_file="${services_data}/${nombre}"
        if ! [[ -r ${service_info_file} ]]; then
        	printf "ERROR: %s\n\n" "El servicio ${nombre} no está configurado (no existe o no se puede leer ${services_data}/${nombre}"
        	exit 1
        fi;

        service_info="$(cat ${service_info_file})"

        service_script="/etc/init.d/$(echo ${service_info}|cut -f1 -d',')"
        pid_file="$(echo ${service_info}|cut -f2 -d',')"
        service_executable="$(echo ${service_info}|cut -f3 -d',')"

        if [[ -z ${service_info} || -z ${service_script} || -z ${pid_file} || -z ${service_executable} ]]; then
        	printf "ERROR: %s\n\n" "La configuración del servicio ${nombre} no está completa (verificar ${services_data}/${nombre})"
        	exit 1
        else
            # Tenemos toda la información necesaria
            if ! [[ -s ${service_script} ]]; then
            	printf "ERROR: %s\n\n" "El script de arranque y parada ${service_script} para el servicio ${nombre} no existe o ne se puede leer"
            	exit 1
            fi;
            ${service_script} status > /dev/null
            if [[ $? -eq 0 ]]; then
            	printf "ERROR: %s\n\n" "El servicio ${nombre} ya está arrancado"
            	exit 1
            fi;

            # Todo está OK, arrancamos
            ${service_script} start

            # Verificamos varias veces si el proceso está operativo
            service_started=-1	# 0=true
            for s in 1 5 15; do
            	sleep ${s}
            	if [[ -e ${pid_file} ]]; then
           			pid_service=`cat ${pid_file}`
            		if [[ $(ps -q ${pid_service} -o cmd|awk '{ print $1 }') == ${service_executable} ]]; then
            			kill -s 0 `cat ${pid_file}`
            			service_started=$?
            		fi
            	fi

            	# Si no hay fichero pid, o el pid del fichero no corresponde con el servicio le preguntamos al script de init.d
            	${service_script} status > /dev/null
            	service_started=$?

            	if [[ ${service_started} -eq 0 ]]; then
            		break
            	fi;
            done;

            if [[ ${service_started} -ne 0 ]]; then
           		printf "ERROR: %s\n\n" "El servicio ${nombre} no se ha podido arrancar"
           		exit 1
           	else
           		printf "\nServicio %s arrancado correctamente\n" ${nombre}
           		log "Servicio ${nombre} arrancado manualmente por gesaplctl"
           	fi;

           	# Quitamos la marca de "servicio parado"
           	rm -f "${services_data}/${nombre}.stop"
           	if  [[ $? -ne 0 ]]; then
           		printf "WARNING: %s\n" "No se ha podido reactivar la configuración de ${nombre}"
           		log "WARNING: No se ha podido reactivar la configuración de ${nombre}\n"
           	fi;
            # Le enviamos una señal al demonio para que tenga en cuenta la nueva configuración
            if [[ -r ${pid_gesapld} ]]; then
            	if ps -hq `cat ${pid_gesapld}` -o cmd|grep -q ${gesapld_bin}; then
            		kill -s SIGUSR1 `cat ${pid_gesapld}`
           		fi;
           	fi;

        fi;
		;;

	"ds")
	    printf "%s\n\n"  "GesApl Control v${GESAPLCTL_VERSION} - Control de servicios monitorizados por GesApl"

        service_info_file="${services_data}/${nombre}"
        if ! [[ -r ${service_info_file} ]]; then
        	printf "ERROR: %s\n\n" "El servicio ${nombre} no está configurado (no existe o no se puede leer ${services_data}/${nombre}"
        	exit 1
        fi;

        service_info="$(cat ${service_info_file})"

        service_script="/etc/init.d/$(echo ${service_info}|cut -f1 -d',')"
        pid_file="$(echo ${service_info}|cut -f2 -d',')"
        service_executable="$(echo ${service_info}|cut -f3 -d',')"

        if [[ -z ${service_info} || -z ${service_script} || -z ${pid_file} || -z ${service_executable} ]]; then
        	printf "ERROR: %s\n\n" "La configuración del servicio ${nombre} no está completa (verificar ${services_data}/${nombre})"
        	exit 1
        else
            # Tenemos toda la información necesaria
            if ! [[ -s ${service_script} ]]; then
            	printf "ERROR: %s\n\n" "El script de arranque y parada ${service_script} para el servicio ${nombre} no existe o ne se puede leer"
            	exit 1
            fi;
            ${service_script} status > /dev/null
            if [[ $? -ne 0 ]]; then
            	printf "ERROR: %s\n\n" "El servicio ${nombre} no está arrancado"
            	exit 1
            fi;

        	if [[ -e ${pid_file} ]]; then
       			pid_service=`cat ${pid_file}`
       		fi;


            # Verificamos varias veces si el proceso está operativo
            service_started=0	# 0=true
            # Todo está OK, paramos
            ${service_script} stop
            sleep 1

         	if [[ $(ps -q ${pid_service} -o cmd|awk '{ print $1 }') == ${service_executable} ]]; then
	            sleep 5
        		kill -s SIGTERM `cat ${pid_file}`
        	elif ${service_script} status > /dev/null; then
        		sleep 5
        		${service_script} stop
        	else
        		service_started=-1	# Service is stopped
        	fi
        	
        	if [[ ${service_started} -eq 0 ]]; then
        		if [[ $(ps -q ${pid_service} -o cmd|awk '{ print $1 }') == ${service_executable} ]]; then
        			kill -s SIGKILL `cat ${pid_file}`
        		elif ${service_script} status > /dev/null; then
        			${service_script} stop
        		else
        			service_started=-1	# Service is stopped	
        		fi
        	fi;
 
            if [[ ${service_started} -eq 0 ]]; then
           		printf "ERROR: %s\n\n" "El servicio ${nombre} no se ha podido parar"
           		exit 1
           	else
           		printf "\nServicio %s detenido correctamente\n" ${nombre}
           		log "Servicio ${nombre} detenido manualmente por gesaplctl"
           	fi;

           	# "Marcamos" el servicio como no activo
           	touch "${services_data}/${nombre}.stop"
           	if  [[ $? -ne 0 ]]; then
           		printf "WARNING: %s\n" "No se ha podido desactivar la configuración de ${nombre}"
           		log "WARNING: No se ha podido desactivar la configuración de ${nombre}\n"
           	fi;
            # Le enviamos una señal al demonio para que tenga en cuenta la nueva configuración
            if [[ -r ${pid_gesapld} ]]; then
            	if ps -hq `cat ${pid_gesapld}` -o cmd|grep -q ${gesapld_bin}; then
            		kill -s SIGUSR1 `cat ${pid_gesapld}`
           		fi;
           	fi;

        fi;
		;;

	"rs")
	    printf "%s\n\n"  "GesApl Control v${GESAPLCTL_VERSION} - Control de servicios monitorizados por GesApl"

        service_info_file="${services_data}/${nombre}"
        if ! [[ -r ${service_info_file} ]]; then
        	printf "ERROR: %s\n\n" "El servicio ${nombre} no está configurado (no existe o no se puede leer ${services_data}/${nombre}"
        	exit 1
        fi;

        service_info="$(cat ${service_info_file})"

        service_script="/etc/init.d/$(echo ${service_info}|cut -f1 -d',')"
        pid_file="$(echo ${service_info}|cut -f2 -d',')"
        service_executable="$(echo ${service_info}|cut -f3 -d',')"

        if [[ -z ${service_info} || -z ${service_script} || -z ${pid_file} || -z ${service_executable} ]]; then
        	printf "ERROR: %s\n\n" "La configuración del servicio ${nombre} no está completa (verificar ${services_data}/${nombre})"
        	exit 1
        else
            # Tenemos toda la información necesaria
            if ! [[ -s ${service_script} ]]; then
            	printf "ERROR: %s\n\n" "El script de arranque y parada ${service_script} para el servicio ${nombre} no existe o ne se puede leer"
            	exit 1
            fi;

            ${service_script} status > /dev/null
            if [[ $? -ne 0 ]]; then
            	printf "WARNING: %s\n\n" "El servicio ${nombre} no está arrancado"
            fi;

            # Todo está OK, arrancamos
            ${service_script} restart

            # Verificamos varias veces si el proceso está operativo
            service_started=-1	# 0=true
            for s in 1 5 15; do
            	sleep ${s}
            	if [[ -e ${pid_file} ]]; then
           			pid_service=`cat ${pid_file}`
            		if [[ $(ps -q ${pid_service} -o cmd|awk '{ print $1 }') == ${service_executable} ]]; then
            			kill -s 0 `cat ${pid_file}`
            			service_started=$?
            		fi
            	fi

            	# Si no hay fichero pid, o el pid del fichero no corresponde con el servicio le preguntamos al script de init.d
            	${service_script} status > /dev/null
            	service_started=$?

            	if [[ ${service_started} -eq 0 ]]; then
            		break
            	fi;
            done;

            if [[ ${service_started} -ne 0 ]]; then
           		printf "ERROR: %s\n\n" "El servicio ${nombre} no se ha podido arrancar"
           		exit 1
           	else
           		printf "\nServicio %s rearrancado correctamente\n" ${nombre}
           		log "Servicio ${nombre} rearrancado manualmente por gesaplctl"
           	fi;

           	# Quitamos la marca de "servicio parado"
           	rm -f "${services_data}/${nombre}.stop"
           	if  [[ $? -ne 0 ]]; then
           		printf "WARNING: %s\n" "No se ha podido reactivar la configuración de ${nombre}"
           		log "WARNING: No se ha podido reactivar la configuración de ${nombre}\n"
           	fi;
            # Le enviamos una señal al demonio para que tenga en cuenta la nueva configuración
            if [[ -r ${pid_gesapld} ]]; then
            	if ps -hq `cat ${pid_gesapld}` -o cmd|grep -q ${gesapld_bin}; then
            		kill -s SIGUSR1 `cat ${pid_gesapld}`
           		fi;
           	fi;

        fi;
		;;

	*)
		printf "ERROR: Comando NO IMPLEMENTADO\n"
		;;
esac
