# Configuración general

INSTALLATION_DIR="/usr/local"

# Emails de los administradores, separados por comas
admin_emails="jmanuel.ciges@gmail.com,theangryjose@gmail.com"

# Directorio en el que se almacenarán los datos de los servicios a monitorizar
services_data="/etc/gesapl/services"

# Directorio para datos temporales
# Este directorio debe poder ser utilizado por usuarios no root
tmp_dir="/tmp/gesapl"

# Log de comandos de la aplicación
# Este fichero debe poder ser escrito por usuarios no root
log_commands_file="${tmp_dir}/gesapl_commands.log"

# -----------------------------------

# Configuración del demonio

# Ruta del demonio
gesapld_bin="${INSTALLATION_DIR}/bin/gesapld"
# Directio temporal para el demonio
tmp_dir_gesapld="/var/run/gesapld"
# Ruta del fichero pid
pid_gesapld="${tmp_dir_gesapld}/gesapld.pid"

# Log del demonio
log_file="/var/log/gesapld.log"
# Mensaje de monitorización del servicio
log_monitor_service_format="Monitorización del servicio %s: \n"

# Ejecutable que monitoriza los servicios
monitor_services="${INSTALLATION_DIR}/bin/gesapl -ms"
# Tiempo entre monitorización del servicio (en segundos)
monitor_interval=60
# Flag que indica que se debe de detener el demonio
stop_flag="${tmp_dir_gesapld}/gesapld.stop"


# -----------------------------------

# Inicialización de GESAPL

# Carga de las funciones comunes
gesapl_lib="${INSTALLATION_DIR}/lib/gesapl/gesapl_functions.sh"
if ! [[ -r "${gesapl_lib}" ]];  then
    printf "ERROR: %s!\n\n" "Fichero ${gesapl_lib} no encontrado o imposible de leer"
    exit 1
fi;
source ${gesapl_lib}

# Creamos el directorio para el demonio si somos 'root'
if [[ `id -u` -eq 0 ]] && ! [[ -d ${tmp_dir_gesapld} ]]; then
	mkdir -p ${tmp_dir_gesapld}
	if [[ $? -ne 0 ]]; then
		msg_error="No se ha podido crear el directorio temporal ${tmp_dir_gesapld}"
   		printf "ERROR: %s!\n\n" "${msg_error}"
   		log "${msg_error}"
   		exit 1
	fi;
fi;

# Creamos el directorio temporal si no existe
if ! [[ -d ${tmp_dir} ]]; then
	(umask 0000; mkdir -p ${tmp_dir})
	if [[ $? -ne 0 ]]; then
		msg_error="No se ha podido crear el directorio temporal ${tmp_dir}"
    	printf "ERROR: %s!\n\n" "${msg_error}"
    	log "${msg_error}"
    	exit 1
	fi;
fi;

# Creamos archivos log vacíos con los derechos adecuados si es necesario
# Log del demonio. Además del demonio también una monitorización lanzada manualmente será registrada
# Abrimos los permisos por tanto (TODO: Mejorar la gestión de los logs)
if ! [[ -e ${log_file} ]]; then
	if [[ -w $(dirname ${log_file}) ]]; then
		(umask 0111; touch ${log_file} 2>/dev/null)
		if [[ $? -ne 0 ]]; then
			printf "ERROR: %s!\n\n" "No es posible escribir en el archivo ${log_file}"
			exit	
		fi;
	fi;
fi;

# Log de comandos, a usar por todos los scripts y a ejecutar por usuarios no root
if ! [[ -w ${log_commands_file} ]]; then
	(umask 0111; touch ${log_commands_file} 2>/dev/null)
	if [[ $? -ne 0 ]]; then
		printf "ERROR: %s!\n\n" "No es posible escribir en el archivo ${log_commands_file}"
		exit	
	fi;
fi;
